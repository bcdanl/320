---
title: Lecture 2
subtitle: Getting Started with Jupyter Notebook and Quarto
format:
  clean-revealjs:
    self-contained: false
    chalkboard: true
    incremental: true
    code-annotations: hover
    scrollable: false

    # logo: logo-title-slide.png
author:
  - name: Byeong-Hak Choe
    email: bchoe@geneseo.edu
    affiliations: SUNY Geneseo
date: 2025-01-27
execute: 
  eval: true
  echo: true
callout-icon: false

from: markdown+emoji
include-after-body: target-hover.html # effect.html

# bibliography: refs.bib
---


```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)


theme_set(theme_fivethirtyeight()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(angle = 0,
                               size = rel(1.5),
                               margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(angle = 0,
                               size = rel(1.5),
                               margin = margin(0,10,0,0)),
                axis.text.x = element_text(size = rel(1.5)),
                axis.text.y = element_text(size = rel(1.5)),
                strip.text = element_text(size = rel(1.5)),
                legend.position = "top",
                legend.text = element_text(size = rel(1.5)),
                legend.title = element_text(size = rel(1.5))
                )
          )
```


# Getting Started with Jupyter Notebook and Quarto {background-color="#1c4982"}


## Building a Personal Website on GitHub

- Follow steps described in [**Classwork 1**](https://bcdanl.github.io/320/danl-cw/danl-320-cw-01.html).


## Let's Practice Markdown!

- Jupyter Notebook, Quarto, and GitHub-based Discussion Boards use **markdown** as its underlying document syntax.

- Let's do [**Classwork 2**](https://bcdanl.github.io/320/danl-cw/danl-320-cw-02.html).


## Getting Started with Jupyter Notebook and HTML
### YAML


:::: {.columns}
::: {.column width="25%"}
![](https://bcdanl.github.io/lec_figs/quarto-yml-engine.jpg){width="75%"}
:::


::: {.column width="70%"}

:::{}
- An YAML (yet another markup language) header surrounded by `---`.
  - It is commonly used for document configuration (e.g., title, author, date, style, ...).


- In YAML, **indentation** really matters!
  - **tab** (or four spaces) defines a level in YAML.
  
:::

:::
::::



## Getting Started with Jupyter Notebook and HTML
### Knitting / Rendering

![](https://bcdanl.github.io/lec_figs/quarto-flow.png)

- When we knit the document, Quarto sends the `.qmd` file to **jupyter**/**knitr**, which executes all of the code chunks and creates a new markdown (`.md`) document which includes the code and its output. 

- The markdown file (`*.md`) generated by **jupyter**/**knitr** is then processed by **pandoc**, which is responsible for creating the output file.





## Getting Started with Jupyter Notebook and HTML
### Markdown, Jupyter Notebook, and HTML

- The very original version of **Markdown** was invented mainly to write HTML content more easily.
  - For example, `- SOME_TEXT` in "*.md" is equivalent to `<ul><li> SOME_TEXT </li>` in "*.html"
  
  
- Pandoc makes it possible to convert a Markdown document to a large variety of output formats, such as HTML.



## Getting Started with Jupyter Notebook and HTML
### Markdown, Jupyter Notebook, and HTML


```{.bash}
---
title: "Habits"
author: YOUR_NAME
date: January 27, 2025
format: 
  html
---
```



- To create an HTML document from Jupyter Notebook, we specify the `html` output format in the YAML metadata of our document.
  - By default, `format: html` is set.

- Open an empty Jupyter Notebook file from **Google Colab** (or VSCode).
  - Create the first cell that is Text.
  - Type the above YAML metadata to the first Text cell.





## Getting Started with Jupyter Notebook and HTML
### Markdown, Jupyter Notebook, and HTML

```{.bash}
---
title: "Python Basics"
author: YOUR_NAME
date: "2025-01-27"
---
```

- Download the Jupyter Notebook file, `danl-320-python-basic.ipynb` from Brightspace, and open it from Google Colab (or VSCode if you prefer).

- The above syntax is part of YAML metadata in `danl-320-python-basic.ipynb`.
  - YAML should be always in the first cell, and the first cell should be **text**, not code.



# Managing a Website with Jupyter Notebook and Quarto {background-color="#1c4982"}

## Quarto Website: `_quarto.yml`
:::: {.columns}
::: {.column width="50%"}
```{.bash}
---
project:
  type: website

website:
  title: "YOUR NAME"
  navbar:
    left:
      - text: Project
        href: danl_proj_nba.ipynb
      - text: Blog
        href: blog-listing.qmd
```

:::

::: {.column width="50%"}

```{.bash}
format:
  html:
    theme: cosmo
    css: styles.css
    toc: false
---
```

- The `_quarto.yml` file configures the website settings.

- **Indentation** matters!

:::

::::




- In **RStudio**, open the project `USERNAME.github.io.Rporj`.
  1. Click `Project: (None)` at the top-right corner.
  2. Click `USERNAME.github.io.Rproj`.


- `_quarto.yml` configures a website, and provides various options for HTML documents within the website.




## Quarto Website
### Custom CSS

- Cascading Style Sheets (CSS) is used to format the layout of a webpage (color, font, text size, background, display, etc.). 
  - HTML will format the architecture of the house.
  - CSS will be the carpet and walls to decorate the house.
  - JavaScript adds interactive elements in the house, such as opening doors and lighting.

  
- We are not front-end web developers. 
  - We will not cover the use of CSS and JavaScript.



## Quarto Website
### Rendering

:::{.nonincremental}
- The **Render** button (**command/Ctrl + shift + K**) renders a single Quarto document file (e.g., `index.qmd`) to create an output document.

- `quarto render` from Terminal renders ALL Quarto documents and Jupyter Notebook files in your local working directory:

```{.bash}
quarto render
```

- `quarto render` should be used if there is any change in `_quarto.yml`.


:::


::: {.callout-tip}
## Tip

- Edit `_quarto.yml`, `*.qmd`, or `*.ipynb` files ONLY from your local laptop or Google Colab. 
  - Do not edit them from your GitHub repo for the website.

:::





## Quarto Website
### Adding `*.ipynb` to a Quarto website


- By default, `quarto render` doesnâ€™t execute any code in `.ipynb` notebooks. 

- `quarto render` renders `.ipynb` notebooks, so that corresponding `html` files are rendered. 

  - If you need to update cell outputs in `*.ipynb`, run that `*.ipynb` on Google Colab, save the notebook, and download it to your local working directory.




## Quarto Website
### Appearance and Style

- `theme` specifies the Bootstrap theme to use for the page (themes are drawn from the [Bootswatch](https://bootswatch.com) theme library).
  - Valid themes include `default`, `bootstrap`, `cerulean`, `cosmo`, `darkly`, `flatly`, `journal`, `lumen`, `paper`, `readable`, `sandstone`, `simplex`, `spacelab`, `united`, and `yeti`. 

  
- `highlight-style` specifies the code highlighting style. 
  - Supported styles include `default`, `tango`, `pygments`, `kate`, `monochrome`, `espresso`, `zenburn`, `haddock`, `breezedark`, and `textmate`. 



## Quarto Website
### About

- Your `index.qmd` sets a front page **about** you.
  - Details in **about** pages are available here:
  - [https://quarto.org/docs/websites/website-about.html](https://quarto.org/docs/websites/website-about.html).


- Quarto includes 5 built-in templates:
  - `jolla`
  - `trestles`
  - `solana`
  - `marquee`
  - `broadside`



## Quarto Website
### Icons and Emojis

- A ton of Bootstrap icons are available here:
  - [https://icons.getbootstrap.com](https://icons.getbootstrap.com).


- A ton of markdown emojis are available here `r emo::ji('smile')`:
  - [https://github.com/ikatyang/emoji-cheat-sheet](https://github.com/ikatyang/emoji-cheat-sheet)
  - [https://gist.github.com/rxaviers/7360908](https://gist.github.com/rxaviers/7360908)




## Quarto Website
### Naviation and Adding Pages

```{.bash}
left:
- text: Project
  href: project.ipynb
- text: Blog
  href: blog-listing.qmd
- text: Homeowrk
  href: hw.ipynb
```

- We can add a new page to the website through `navbar` in `_quarto.yml`



## Quarto Website
### Naviation and Adding Pages


```{.bash}
left:
  - text: "Python Data Analysis"
    menu:
      - pandas_basic.ipynb
      - seaborn_basic.ipynb
```

- We can also create a drop-down menu by including a `menu`

- More details about navbar are available here:
  - [https://quarto.org/docs/websites/website-navigation.html](https://quarto.org/docs/websites/website-navigation.html)




## Quarto Website  {background-color="#6497b1"}
### Colors


- A ton of hex codes for colors are available here:
  - [https://www.color-hex.com](https://www.color-hex.com)




## Quarto Website Basics

- Let's do [**Classwork 3**](https://bcdanl.github.io/320/danl-cw/danl-320-cw-03.html).







